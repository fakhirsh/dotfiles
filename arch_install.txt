Following the official guide:
-----------------------------
https://wiki.archlinux.org/index.php/Installation_guide

=========================================================================

Step 1:
------
--- Make sure network interfaces are listed:
    > ip link

--- Make sure internet is working:
    > ping archlinux.org


Step 2:
------
--- Update system clock:
    > timedatectl set-ntp true


Step 3:
------
Partition the disks: (2 partitions, i.e boot + root. We will sreate a SWAP file later)

--- Verify name of the SSD:
    > lsblk
    > lsblk -Sp

--- Launch fdisk on SSD:
    > fdisk /dev/sda

    * press 'p' to list all partitions
    * delete all existing partitions

    * create boot partition:
    > n
    > (enter)
    > (enter)
    > (enter)
    > +200M
    > (remove existing signatures if asked)

    * create root partition:
    > n
    > (enter)
    > (enter)
    > (enter)
    > (enter)     {or enter a custom size such as +110G}
    > (remove existing signatures if asked)

    * save changes:
    > w

--- Format the  boot partition:
    > mksf.ext4 -L boot /dev/sda1



Step 4:
------

    (https://wiki.archlinux.org/index.php/Dm-crypt/Encrypting_an_entire_system)

--- First, create a temporary encrypted container on the partition to be encrypted: 
    > cryptsetup open --type plain -d /dev/urandom /dev/<block-device> to_be_wiped
    
    --- Verify that it exists:
        > lsblk
    
    --- Wipe the container with zeros:
        > dd if=/dev/zero of=/dev/mapper/to_be_wiped bs=1M status=progress
        
    --- Get the exact container size as root:
        > blockdev --getsize64 /dev/mapper/to_be_wiped
        
    --- Finally, close the temporary container:
        > cryptsetup close to_be_wiped
    

   
--- Setup encryption on the root partition:
    > cryptsetup -vy luksFormat --type luks2 /dev/sda2
    > YES
    > (type paraphrase)
    
    --- Unlock encrypted partition:
        > cryptsetup open /dev/sda2 luks    # 'luks' is just an arbitrary label of your choice
        > (type paraphrase)

    --- After unlocking the partition, it will be available at /dev/mapper/name. Now create a file system of your choice with: 
        > mkfs.ext4 /dev/mapper/luks


--- Manually Mount partitions:
    > mkdir /mnt/boot
    > mount /dev/sda1 /mnt/boot   
    
    # Before mounting make sure that the encrypted device is already open using the 'cryptsetup open /dev/sda2 luks' command!
    > mount -t ext4 /dev/mapper/luks /mnt
     
    --- Tip: Test the partitions by unmounting and remounting:
        > umount /mnt
        > cryptsetup close name
        > cryptsetup open /dev/sda2 luks
        > mount -t ext4 /dev/mapper/luks /mnt


Step 5:
------
Ranking mirrors using 'Reflector': (https://wiki.archlinux.org/index.php/Reflector)
    Sorts the most recent 13 links wrt to their speed:
    > reflector --verbose --latest 13 --sort rate --save /etc/pacman.d/mirrorlist


Step 6: (Install Packages)
------
--- Install arch linux:
    > pacstrap /mnt base base-devel linux linux-firmware vim git


Step 7: (Update File System Table)
------
--- Generate file system table:
    > genfstab -p -U /mnt >> /mnt/etc/fstab


Step 8:
------
--- Change to root:
    > arch-chroot /mnt


Step 9: (Time zone and Locale)
------
--- Set time zone:
    > ln -sf /usr/share/zoneinfo/Asia/Karachi /etc/localtime
    > hwclock --systohc
    > timedatectl set-timezone Asia/Karachi

--- Set localization: Uncomment en_US.UTF-8 UTF-8 and other needed locales in /etc/locale.gen, and generate them with:
    > locale-gen

--- Create the locale.conf(5) file, and set the LANG variable accordingly: 
    > echo LANG=en_US.UTF-8 > /etc/locale.conf
    > export LANG=en_US.UTF-8


Step 10: (Setup GRUB)
------

--- Install GRUB:
    > pacman -S grub

--- Edit /etc/default/grub:
    > vim /etc/default/grub
    
    --- Change line 6 as follows:
        > GRUB_CMDLINE_LINUX_DEFAULT="cryptdevice=/dev/sda2:luks root=/dev/mapper/luks"

    --- Change line 52 in /etc/mkinitcpio.conf as follows. Add encrypt between block and filesystem:
        > HOOKS=(base udev autodetect modconf block encrypt filesystems keyboard fsck)

    --- Run:
        > mkinitcpio -p linux

--- Install grub on the SDD:
    > grub-install --recheck /dev/sda

--- Make grub config file:
    > grub-mkconfig -o /boot/grub/grub.cfg


Step 11: (Create users)
-------
--- Add user and assign password:
    > useradd -m -g wheel $USER
    > passwd $USER

--- Add $USER to super users. Edit /etc/sudoers file using visudo:
    > visudo
    * Uncomment the following line:
    > # %wheel ALL=(ALL) ALL

--- Set a root password:
    > passwd


Step 11: (Swap file)
-------

--- Create a swap file:
    > fallocate -l 8G /swapfile
    
    --- Change permisions:
        > chmod 600 /swapfile

    --- Asign it as a swap file:
        > mkswap /swapfile

    --- Add into file systemtable:
        >  echo '/swapfile none swap sw 0 0' | tee -a /etc/fstab



Step 12: (Network Configuration)
-------

--- Create hostname file:
    > echo atom > /etc/hostname

--- Edit /etc/hosts file as instructed on the official arch installation page.

--- Install network manager:
    > pacman -S networkmanager
    
--- Enable network interfaces at startup automatically:
    > systemctl enable NetworkManager


Step 13:
------- 
    > exit
    > umount -a
    > reboot


Step 14: (Graphical User Interface)
-------

--- Install packages:
    > pacman -S xorg i3-wm i3status xorg-xinit dmenu rofi terminator feh ranger zathura zathura-ps zathra-djvu mutt lynx tmux youtube-dl texlive-bin texlive-core texlive-science texlive-pictures texlive-music cups cups-pdf system-config-printer

--- Initialize .xinitrc file to load i3 whenever you type 'startx':
    > echo exec i3 > .xinitrc

--- Automatically start GUI by adding startx command to .bashrc:
    > echo startx >> .bashrc

--- Start GUI:
    > startx


=======================================================================
=======================================================================
=======================================================================

Post Installation Settings:
---------------------------

--- Enable Audio:
  |--- By default audio ports are disabled.
       > sudo pacman -S alsa-utils
       Then run alsamixer. Un-mute channels using (m) key
       https://www.youtube.com/watch?v=3cuuLQ19WTA
       
  |--- pulse audio volume GUI:
       > sudo pacman -S pavucontrol
       
  
--- Enable Boot Messages:
   |--- https://bbs.archlinux.org/viewtopic.php?id=213815


--- Install "PCManFM" file manager
    |--- install "gvfs" to support trash can and USB ausomount support


------------------------------------------------------------------------

CUPS service Issue with Arch:



---- AS OF OCT 2014 -----
ArchWiki wrote:

    For cups 2.0.0, the service name has been changed to org.cups.cupsd.service 
    instead of cups.service. This package is available in extra from October 31, 2014. 
    When upgrading to version 2.0.0, it is necessary to manually disable the old 
    service, otherwise broken symbolic links will be left in /etc/systemd/system/ 
    subdirectories and systemd will warn about non-existent services.


> systemctl enable org.cups.cupsd.service 



